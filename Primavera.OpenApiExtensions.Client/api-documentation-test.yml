openapi: "3.0.2"
x-Primavera-Extensions:
    Pri-Enums: 
        - HttpMethods: test
    Pri-Models:
        - modelx: test
    Pri-Resources:
        - storage: sqlserver
    Pri-Documentation: true
    
info:
  title: "Primavera API"
  description: "Get Primavera Clients **Note**: This sample Swagger file covers the `current` endpoint only from the Primavera API. <br/><br/> **Note**: All parameters are optional, but you must select at least one parameter. Calling the API by client ID (using the `id` parameter) will provide the most precise client detail results."
  version: "2.5"
  termsOfService: "https://Primavera.org/terms"
  contact:
    name: "Primavera API"
    url: "https://Primavera.org/api"
    email: "some_email@gmail.com"
  license:
    name: "CC Attribution-ShareAlike 4.0 (CC BY-SA 4.0)"
    url: "https://Primavera.org/price"
    
    
servers:
  - url: https://api.PrimaveraApiServerTest/pri-api-test
    description: Production server
  - url: http://beta.api.PrimaveraApiServerTest/pri-api-test
    description: Beta server
  - url: http://some-other.api.PrimaveraApiServerTest/pri-api-test
    description: Some other server
    
paths:
    /clients:
        get:
            summary: Lists all the clients delimited by pages
            operationId: listClients
            tags:
              - clients
            parameters: 
              - name: limit
                in: query
                description: How many items to return per page
                required: false
                deprecated: false
                allowEmptyValue: false
                schema:
                  type: integer
                  format: int32
            responses:
              '200':
                description:  Paged  array of Clients
                headers:
                  x-next:
                    description: a link to the next page of responses
                    schema:
                      type: string
                content:
                  application/json:
                    schema:
                      $ref: "#/components/schemas/Clients"
              default:
                description: unexpected error
                content:
                  application/json:
                    schema:
                      $ref: "#/components/schemas/Error"
        post:
          summary: Create a client
          operationId: createClients
          tags:
            - clients
          responses:
            '201':
              description: "Null Response"
            default: 
              description: unexpected error
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/Error"
    /clients/{clientId}:
        get:
          summary: Details of a specific client
          operationId: showClientById
          tags:
            - clients
          parameters: 
            - name: clientId
              in: path
              required: true
              description: The id of the client to retrieve
              schema:
                type: string
          responses:
            '200':
              description: Expected response to a valid request
              content:
                application/json:
                  schema: 
                    $ref: "#/components/schemas/Clients"
            default:
              description: unexpected error
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/Error"

components:
  schemas:
    Client:
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name: 
          type: string
        tag: 
          type: string
    Clients:
      type: array
      items:
        $ref: "#/components/schemas/Client"
    Error:
      required:
        - code
        - message
      properties:
        code: 
          type: integer
          format: int32
        message: 
          type: string